# Makefile for the cil wrapper
# author: George Necula

# Debugging. Set ECHO= to debug this Makefile 
ECHO = @

# Directory containing the *.cm[io] files for odoc.
ODOC_DIR=/usr/local/src/ocamldoc
CILHTMLDEST=/usr/local/apache-1.3.22/htdocs/cil

ifdef RELEASE
  NATIVECAML := 1
endif

SOURCEDIRS  = src src/frontc
OBJDIR      = obj
MLLS        = clexer.mll
MLYS        = cparser.mly
MODULES     = pretty errormsg trace stats util clist \
              cabs cprint clexer cparser cabsvisit \
              cil cabs2cil frontc check logcalls logwrites rmtmps \
	      cfg heapify simplemem oneret testcil unionfind type maincil

EXECUTABLE  = $(OBJDIR)/cilly
ifdef NATIVECAML
  UNSAFE      = 1
endif
CAMLLIBS    = unix


# Additional things to clean
EXTRACLEAN += $(OBJDIR)/*.obj $(OBJDIR)/*.a $(OBJDIR)/*.o


ifneq ($(ARCHOS), x86_WIN32)
ifneq ($(ARCHOS), x86_LINUX) 
   $(error You must set the ARCHOS variable to either x86_WIN32 or x86_LINUX)
endif
endif

    # Include now the common set of rules for OCAML
    # This file will add the rules to make $(EXECUTABLE)$(EXE)
include Makefile.ocaml


quickbuild: $(EXECUTABLE)$(EXE)
	$(MAKE) -r -f Makefile.merger  quickbuild $(MAKEOVERRIDES)

setup:
	$(MAKE) -r -f Makefile.cil all $(MAKEOVERRIDES) NATIVECAML= 
	$(MAKE) -r -f Makefile.cil all $(MAKEOVERRIDES) NATIVECAML=1
	$(MAKE) -r -f Makefile.merger setup $(MAKEOVERRIDES)

all:  quickbuild cillib
# Build an OCAML library (CMA / CMXA) that exports our Cil stuff
cillib: $(OBJDIR)/cil.$(CMXA)

OCAML_CIL_LIB_MODULES = $(MODULES:main=)
$(OBJDIR)/cil.$(CMXA): $(OCAML_CIL_LIB_MODULES:%=$(OBJDIR)/%.$(CMO))
	$(CAMLLINK) -a -o $@ $^

# Test cil
ifdef _MSVC
TESTCILARG=--MSVC -testcil "bash msvctestcil"
else
TESTCILARG=       -testcil "bash gcctestcil"
endif

.PHONY: testcil
testcil: $(EXECUTABLE)$(EXE)	
	       cd test; ../$(EXECUTABLE)$(EXE) $(TESTCILARG)

.PHONY: odoc texdoc

# Documentation generated by "ocamldoc"
odoc:
	-rm -rf doc/html/cil/api
	-mkdir doc/html/cil/api
	-ocamldoc -d doc/html/cil/api -v -stars \
             -html \
             -t "CIL API Documentation" \
	     -I obj src/cil.mli src/errormsg.mli src/clist.mli \
	  	    src/pretty.mli src/stats.mli

# Documentation generated from latex files using "hevea"
texdoc:
	-rm -rf doc/html/cil
	-mkdir doc/html/cil
	-mkdir doc/html/cil/examples
	cd doc; perl cilcode.pl cil.tex >cilpp.tex
	cd doc/html/cil; hevea -exec xxdate.exe ../../cilpp
	cd doc/html/cil; hevea -exec xxdate.exe ../../cilpp
	cd doc/html/cil; mv cilpp.html cil.html
	cd doc/html/cil; hacha -o ciltoc.html cil.html
	cp doc/cilindex.html doc/html/cil/index.html
	cp doc/cilheader.html doc/html/cil

CILHTMLDEST := /usr/local/apache-1.3.22/htdocs/cil
doc: texdoc odoc
	if test -d $(CILHTMLDEST); then \
           cp -rf doc/html/cil/* $(CILHTMLDEST); fi

#----------------------------------------------------------------------
# Generate the CIL distribution
# This will create a file cil.tar.gz. It includes the HTML documentation 
# so that people can use it even if they don't have ocamldoc, hevea etc. 

.PHONY: distrib

# Work in a temporary directory
TEMP_DIR = TEMP_cil-distrib

# The tar archive members will be relative to this directory
TOP_DIR = cil

DISTRIB_SRC = pretty.ml pretty.mli errormsg.ml errormsg.mli \
              trace.ml trace.mli stats.ml stats.mli \
              util.ml clist.ml clist.mli \
	      cil.ml cil.mli check.ml check.mli \
	      logcalls.ml logcalls.mli logwrites.ml \
	      rmtmps.ml rmtmps.mli cfg.ml cfg.mli \
	      heapify.ml testcil.ml maincil.ml

DISTRIB_SRC_FRONTC = cabs.ml cprint.ml clexer.mli clexer.mll \
		     cparser.mly cabsvisit.ml cabsvisit.mli \
		     cabs2cil.ml cabs2cil.mli frontc.ml frontc.mli

DISTRIB_LIB = CompilerStub.pm Merger.pm cilly.pl patcher.pl

distrib: doc

        # Create the distribution from scratch
	rm -rf $(TEMP_DIR)
	mkdir $(TEMP_DIR)

	rm -rf cil.tar.gz
	mkdir $(TEMP_DIR)/cil \
	      $(TEMP_DIR)/cil/src \
              $(TEMP_DIR)/cil/obj \
              $(TEMP_DIR)/cil/doc \
	      $(TEMP_DIR)/cil/lib \
	      $(TEMP_DIR)/cil/doc/api \
              $(TEMP_DIR)/cil/obj/.depend \
              $(TEMP_DIR)/cil/src/frontc \
              $(TEMP_DIR)/cil/test \

	cp Makefile.cil $(TEMP_DIR)/cil/Makefile
	cp Makefile.ocaml $(TEMP_DIR)/cil/Makefile.ocaml

	cp $(patsubst %,src/%,$(DISTRIB_SRC)) $(TEMP_DIR)/cil/src
	cp $(patsubst %,src/frontc/%,$(DISTRIB_SRC_FRONTC)) \
		$(TEMP_DIR)/cil/src/frontc
	cp $(patsubst %,lib/%,$(DISTRIB_LIB)) $(TEMP_DIR)/cil/lib

	cp -r doc/html/cil/* $(TEMP_DIR)/cil/doc
	cd $(TEMP_DIR); tar cfz cil.tar.gz cil

	if test -d $(CILHTMLDEST); then \
                cp -f $(TEMP_DIR)/cil.tar.gz $(CILHTMLDEST); fi
	rm -rf $(TEMP_DIR)

	if test -d $(CILHTMLDEST); then \
                cp -rf doc/html/cil/* $(CILHTMLDEST); fi



clean: cleancaml

# Makefile for the cil wrapper
# author: George Necula

# Debugging. Set ECHO= to debug this Makefile 
ECHO = @



SOURCEDIRS  = src src/frontc
OBJDIR      = obj
MLLS        = clexer.mll
MLYS        = cparser.mly
MODULES     = pretty errormsg trace stats util clist \
              cabs cprint clexer cparser cabsvisit \
              cil cabs2cil frontc check logcalls logwrites rmtmps \
	            cfg heapify testcil maincil

EXECUTABLE  = $(OBJDIR)/cilly
CAMLUSEUNIX = 1
ifdef NATIVECAML
  UNSAFE      = 1
endif
CAMLLIBS    = 


# Additional things to clean
EXTRACLEAN += $(OBJDIR)/*.obj $(OBJDIR)/*.a $(OBJDIR)/*.o


    # Include now the common set of rules for OCAML
    # This file will add the rules to make $(EXECUTABLE)$(EXE)
include Makefile.ocaml


# ww: build an OCAML library (CMA / CMXA) that exports our Cil stuff
# kudos to George for this lovely patsubst code ...
cillib: $(OBJDIR)/cil.$(CMXA)

# What should we put into the OCAML CIL library? 
# everything by main.cl, basically
OCAML_CIL_LIB_MODULES = $(MODULES:main=)
$(OBJDIR)/cil.$(CMXA): $(OCAML_CIL_LIB_MODULES:%=$(OBJDIR)/%.$(CMO))
	$(CAMLLINK) -a -o $@ $^


# Test cil
# sm: was the purpose of "-c ./" to work around the fact that
# the script isn't executable?  they don't have that effect..
ifdef _MSVC
TESTCILARG=--MSVC -testcil "bash msvctestcil"
else
TESTCILARG=       -testcil "bash gcctestcil"
endif

.PHONY: testcil
testcil: $(EXECUTABLE)$(EXE)	
	       cd test; ../$(EXECUTABLE)$(EXE) $(TESTCILARG)

.PHONY: odoc
odoc:
	rm -rf doc/cil-api
	mkdir doc/cil-api
	odoc -d doc/cil-api -g odoc_fhtml.cmo -t "CIL Documentation" \
	     -I obj src/cil.mli src/errormsg.mli src/clist.mli \
	  	    src/pretty.mli src/stats.mli

#----------------------------------------------------------------------
# Generate the CIL distribution

.PHONY: cil-distrib

DISTRIB-SRC1 = cil.ml cil.mli clist.ml clist.mli errormsg.ml errormsg.mli \
               logcalls.ml logcalls.mli logwrites.ml pretty.ml pretty.mli \
               stats.ml stats.mli trace.ml trace.mli 
DISTRIB-SRC2 = heapify.ml main.ml util.ml

DISTRIB-SRC-FRONTC = cabs2cil.ml cabs2cil.mli cabs.ml cabsvisit.ml \
                     cabsvisit.mli clexer.mli clexer.mll combine.ml \
                     combine.mli cparser.mly cparser.output cprint.ml \
                     frontc.ml frontc.mli maincombiner.ml merger.ml patch.ml \
                     patch.mli
cil-distrib: odoc
	rm -rf cil-distrib cil.distrib.tar.gz cil-api.tar.gz
	mkdir cil-distrib cil-distrib/src cil-distrib/obj cil-distrib/doc \
              cil-distrib/obj/.depend cil-distrib/src/frontc

	cp cil-distrib.Makefile cil-distrib/Makefile
	cp Makefile.ocaml cil-distrib/Makefile.ocaml

	cp $(patsubst %,src/%,$(DISTRIB-SRC1)) cil-distrib/src

	for i in $(DISTRIB-SRC2); do cp src/cil-distrib.$$i \
		cil-distrib/src/$$i; done

	cp $(patsubst %,src/frontc/%,$(DISTRIB-SRC-FRONTC)) \
             cil-distrib/src/frontc

	cd doc; hevea cil-distrib.tex
	cp -r doc/cil-api/* cil-distrib/doc
	tar cvfz cil-distrib.tar.gz cil-distrib
	cd doc; tar cvfz ../cil-api.tar.gz cil-api


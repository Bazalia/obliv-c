Find out who uses src/frontc/cprint (pretty printing is done in ocamlutils/pretty).

Cast to obliv on return needs to go through known() functions

Make sure you can't have obliv pointers

Not sure what the parser currently does in the following line, but I need the 'obliv' applied to the int, and not the whole array.
  obliv int x[5];
Also check this on typedefs

Right now this turns both to const: extern const int x; int x = 5; Should be 
illegal. Need to hack CIL attribute parsing for this. Same problem with obliv
instead of const.

floating point and enum types
check obliv array length (variable) in decl
special case: disallow/warn obliv variables in printf
warn if 'obliv if' has non-obliv condition

Calling obliv functions through a pointer doesn't work yet. Right now, what happens is that function types change the moment function prototypes change. Might have to change this: either change function prototypes later in a separate phase after changing all calls, or use existing phases to change all function parameters in prototypes and calls in codegen, and change types in typeFixing phase. But this means that functions will have inconsistent definitions in the meantime ... may or may not be a problem. Typefixing includes adding cond param and dropping obliv attribute.
